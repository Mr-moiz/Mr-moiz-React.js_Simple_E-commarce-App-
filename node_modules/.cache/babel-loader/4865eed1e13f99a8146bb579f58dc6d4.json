{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { firebase } from \"../firebase/firebase\"; // initial the store \n\nconst initialStateUser = [];\nexport const productSlice = createSlice({\n  // name: \"user\",\n  initialState: {\n    value: initialStateUser\n  },\n  reducers: {\n    onAdd: (state, action) => {\n      state.value = action.payload;\n      const exist = state.value.find(x => x.id === state.value.id);\n\n      if (exist) {\n        return state.value.map(x => x.id === product.id ? { ...exist,\n          qty: exist.qty + 1\n        } : x);\n      } else {\n        state.value = [...cartItems, { ...product,\n          qty: 1\n        }];\n      }\n    },\n    onRemove: (state, action) => {\n      state.value = action.payload;\n      const exist = state.value.find(x => x.id === state.value.id);\n\n      if (exist.qty === 1) {\n        state.value = state.value.filter(x => x.id !== state.value.id);\n      } else {\n        state.value = state.value.map(x => x.id === state.value.id ? { ...exist,\n          qty: exist.qty - 1\n        } : x);\n      }\n    }\n  }\n});\nexport const {\n  onRemove,\n  onAdd\n} = userSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Applications/react-e-commarce/src/features/product.js"],"names":["createSlice","firebase","initialStateUser","productSlice","initialState","value","reducers","onAdd","state","action","payload","exist","find","x","id","map","product","qty","cartItems","onRemove","filter","userSlice","actions","reducer"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAGC;;AACD,MAAMC,gBAAgB,GAAG,EAAzB;AAGA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACtC;AACAI,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAFwB;AAGtCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtBD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACA,YAAMC,KAAK,GAAGH,KAAK,CAACH,KAAN,CAAYO,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,KAAK,CAACH,KAAN,CAAYS,EAA7C,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACT,eAAQH,KAAK,CAACH,KAAN,CAAYU,GAAZ,CAAiBF,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASE,OAAO,CAACF,EAAjB,GAAsB,EAAE,GAAGH,KAAL;AAAYM,UAAAA,GAAG,EAAEN,KAAK,CAACM,GAAN,GAAY;AAA7B,SAAtB,GAAyDJ,CAAhF,CAAR;AACD,OAFD,MAEO;AACHL,QAAAA,KAAK,CAACH,KAAN,GAAc,CAAC,GAAGa,SAAJ,EAAe,EAAE,GAAGF,OAAL;AAAcC,UAAAA,GAAG,EAAE;AAAnB,SAAf,CAAd;AACH;AAEJ,KAVO;AAYRE,IAAAA,QAAQ,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACA,YAAMC,KAAK,GAAIH,KAAK,CAACH,KAAN,CAAaO,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,KAAK,CAACH,KAAN,CAAYS,EAA9C,CAAf;;AACA,UAAIH,KAAK,CAACM,GAAN,KAAc,CAAlB,EAAqB;AACjBT,QAAAA,KAAK,CAACH,KAAN,GAAeG,KAAK,CAACH,KAAN,CAAae,MAAb,CAAqBP,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,KAAK,CAACH,KAAN,CAAYS,EAAhD,CAAf;AACH,OAFD,MAEO;AACHN,QAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYU,GAAZ,CAAiBF,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASN,KAAK,CAACH,KAAN,CAAYS,EAArB,GAA0B,EAAE,GAAGH,KAAL;AAAYM,UAAAA,GAAG,EAAEN,KAAK,CAACM,GAAN,GAAY;AAA7B,SAA1B,GAA6DJ,CAAnF,CAAd;AAEH;AAEJ;AAtBO;AAH4B,CAAD,CAAhC;AA6BP,OAAO,MAAM;AAAEM,EAAAA,QAAF;AAAYZ,EAAAA;AAAZ,IAAsBc,SAAS,CAACC,OAAtC;AAEP,eAAenB,YAAY,CAACoB,OAA5B","sourcesContent":["\nimport { createSlice } from \"@reduxjs/toolkit\"\nimport { firebase } from \"../firebase/firebase\"\n\n\n // initial the store \nconst initialStateUser = []\n\n\nexport const productSlice = createSlice({\n  // name: \"user\",\n  initialState: { value: initialStateUser },\n  reducers: {\n    onAdd: (state, action) => {\n        state.value = action.payload\n        const exist = state.value.find((x) => x.id === state.value.id);\n        if (exist) {\n          return  state.value.map((x) => x.id === product.id ? { ...exist, qty: exist.qty + 1 } : x)\n        } else {\n            state.value = [...cartItems, { ...product, qty: 1 }]\n        }\n    \n    },\n\n    onRemove: (state, action) => {\n        state.value = action.payload\n        const exist =  state.value .find((x) => x.id === state.value.id);\n        if (exist.qty === 1) {\n            state.value  = state.value .filter((x) => x.id !== state.value.id)\n        } else {\n            state.value = state.value.map((x) =>x.id === state.value.id ? { ...exist, qty: exist.qty - 1 } : x\n          );\n        }\n   \n    },\n  },\n});\n\nexport const { onRemove, onAdd } = userSlice.actions\n\nexport default productSlice.reducer"]},"metadata":{},"sourceType":"module"}